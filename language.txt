<программа>::={ <глобальное описание> } int main() <блок>
<имя>::= <буква> | <имя><буква> | <имя><цифра>
<глобальное описание>::=  description ’{‘ {< описание>} ‘}’ | functions’{‘ {<функция>} ‘}’
<функция>::= <тип><имя> ‘(‘ {<формальные параметры>{,<формальные параметры>} } ‘)’ <блок>
<формальные параметры>::= <тип><имя>[<инициализация>] | <описание массива>
<блок>::= ‘{‘ {оператор}  ‘}’
<оператор>::= <оператор выражения>; | <оператор цикла> | <условный оператор> |
	<оператор ввода>; | <оператор вывода>; | <описание> | <return> ;| <break>;
<описание>::= <тип><имя>[<инициализация>]{,<имя>[<инициализация>]}; | <описание массива>;
<инициализация>::= =<выражение>
<описание массива>::= <тип>’[‘<выражение>’]’{’[‘<выражение>’]’}<имя>
<оператор выражения>::= <выражение>
<выражение>::= <выражение1> | <имя><инициализация> | <индексирование>
<выражение1>::= выражение2>{<операция приравнивания><выражение2>}
<операция приравнивания>::=  += | -= | *= | /= | %= | ^= | =
<выражение2>::= <выражение3>{<операция сравнения><выражение3>}
<операция сравнения>::=  != | > | < | >= | <= | ==
<выражение3>::=  <выражение4>{<операция сложения><выражение4>}
<операция сложения>::= + | -
<выражение4>::=  <выражение5>{<операция умножения><выражение5>}
<операция умножения>::= * | / | %
<выражение5>::= <выражение6>{<операция степени><выражение6>}
<операция степени>::= ^
<выражение6>::= <атом> | <атом><инкремент> | <индексирование> | <инкремент><атом>
<атом>::= <имя>| ‘(‘ <выражение> ‘)’ | <конст> | <вызов функции>
<инкремент>::= ++ | --
<индексирование>::= <имя> ’[‘ <выражение> ’]’
<конст>::= <константа> | <логическое значение> | ! <атом>
<константа>::= [<знак>]<цифра>{<цифра>} | [<знак>]<цифра>{<цифра>}.<цифра>{<цифра>} |
	“ <любая строка> ” | ‘<любой символ>’
<логическое значение>::= true | false
<вызов функции>::= <имя>’(‘ {<выражение>{,<выражение>}} ‘)’
<оператор цикла>::= <for> | <while> | <dowhile> | <foreach>
<for>::= for ‘(‘ <описание> | {<выражение>};  {<выражение>}; {<выражение>}) <блок>
<while>::= while ‘(‘ {<выражение>} ‘)’ <блок>
<dowhile>::= do<блок>while’(‘<выражение>’)’;
<return>::= return <выражение>
<break>::= break
<foreach>::= foreach’(<тип> <имя> in <имя> ‘)’<блок>
<условный оператор>::= if ‘(‘ <выражение> ’)’ <блок> {<elseif>} [<else>]
<elseif>::= else if ‘(‘ <выражение> ’)’ <блок>
<else>::= else<блок>
<оператор ввода>::= get’(‘ <имя>{,<имя>}’)’
<оператор вывода>::= show’(‘ <выводимый элемент>{,<выводимый элемент>} ‘)’
<выводимый элемент>::= endl | <выражение>
<любая строка>::= любой символ кроме “
<тип>::= int | double | bool | string | char
<любой символ>::= любой символ
